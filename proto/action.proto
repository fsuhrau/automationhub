syntax = "proto3";
package action;
option go_package = "hub/action";
option csharp_namespace = "Com.AutomationHub";

service RemoteDevice {
  rpc DeviceList (stream DeviceRequest) returns (stream DeviceResponse) {}
  rpc DeviceInteraction (stream InteractionRequest) returns (stream InteractionResponse) {}
  rpc ActionExecute (stream Request) returns (stream Response) {}
}

message Device {
  string manager = 1;
  string deviceId = 2;
  string name = 3;
  string OperationSystem = 4;
  string SupportedArchitectures = 5;
  string Status = 6;
}

message DeviceRequest {
}

message DeviceResponse {
  repeated Device devices = 1;
}

enum DeviceInteractionType {
  LockDevice = 0;
  UnlockDevice = 1;
  GetDeviceState = 2;
  IsAppInstalled = 3;
  InstallApp = 4;
  UninstallApp = 5;
  StartApp = 6;
  StopApp = 7;
  IsAppConnected = 8;
  StartRecording = 9;
  StopRecording = 10;
  HasFeature = 11;
  ExecuteFeature = 12;
  GetScreenShot = 13;
}

message InteractionRequest {
  string DeviceID = 1;
  DeviceInteractionType type = 2;
}

message InteractionResponse {
}

message SetAttr {
  string id = 1;
  string attr = 2;
  string val = 3;
}

message GetAttr {
  string id = 1;
  string attr = 2;
}

message MoveOffset {
  int64 from = 1;
  int64 to = 2;
}

message MoveElement {
  string from = 1;
  string to = 2;
}

message Touch {
  string id = 1;
  int64 xoffset = 2;
  int64 yoffset = 3;
}

enum ActionType {
  Custom = 0;
  GetSceneGraph = 1;
  ElementIsDisplayed = 2;
  ElementSetValue = 3;
  ElementGetValue = 4;
  Move = 5;
  TouchDown = 6;
  TouchMove = 7;
  TouchUp = 8;
  DragAndDrop = 9;
  LongTouch = 10;
  ElementTouch = 11;
  GetScreenshot = 12;
  GetTests = 13;
  ExecuteTest = 14;
  ExecutionStatus = 15;
  Log = 16;
  UnityReset = 17;
}

enum ContentType {
  Flatbuffer = 0;
  Json = 1;
  Xml = 2;
}

message Request {
  string actionID = 1;
  ActionType actionType = 2;
  oneof payload {
    string id = 3;
    string data = 4;
    SetAttr setAttr = 5;
    GetAttr getAttr = 6;
    MoveOffset moveOffset = 7;
    Touch touch = 8;
    MoveElement moveElement = 9;
    Test test = 10;
  }
}

enum AppType {
  Cocos = 0;
  Unity = 1;
}

message Connect {
  string customerId = 1;
  string appID = 2;
  AppType appType = 3;
  string deviceID = 4;
  string sessionID = 5;
  string version = 6;
}

message Screenshot {
  bytes sceengraph = 1;
  bytes screenshot = 2;
  ContentType contentType = 3;
}

message Test {
  string assembly = 1;
  string class = 2;
  string method = 3;
}

message Tests {
  repeated Test tests = 1;
}

message Response {
  string actionID = 1;
  ActionType actionType = 2;
  bool success = 3;
  oneof payload {
    bool visible = 4;
    bytes data = 5;
    string value = 6;
    Screenshot screenshot = 7;
    Connect connect = 8;
    Tests tests = 9;
  }
}
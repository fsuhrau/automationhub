// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.10.1
// source: action.proto

package action

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeviceInteractionType int32

const (
	DeviceInteractionType_LockDevice     DeviceInteractionType = 0
	DeviceInteractionType_UnlockDevice   DeviceInteractionType = 1
	DeviceInteractionType_GetDeviceState DeviceInteractionType = 2
	DeviceInteractionType_IsAppInstalled DeviceInteractionType = 3
	DeviceInteractionType_InstallApp     DeviceInteractionType = 4
	DeviceInteractionType_UninstallApp   DeviceInteractionType = 5
	DeviceInteractionType_StartApp       DeviceInteractionType = 6
	DeviceInteractionType_StopApp        DeviceInteractionType = 7
	DeviceInteractionType_IsAppConnected DeviceInteractionType = 8
	DeviceInteractionType_StartRecording DeviceInteractionType = 9
	DeviceInteractionType_StopRecording  DeviceInteractionType = 10
	DeviceInteractionType_HasFeature     DeviceInteractionType = 11
	DeviceInteractionType_ExecuteFeature DeviceInteractionType = 12
	DeviceInteractionType_GetScreenShot  DeviceInteractionType = 13
)

// Enum value maps for DeviceInteractionType.
var (
	DeviceInteractionType_name = map[int32]string{
		0:  "LockDevice",
		1:  "UnlockDevice",
		2:  "GetDeviceState",
		3:  "IsAppInstalled",
		4:  "InstallApp",
		5:  "UninstallApp",
		6:  "StartApp",
		7:  "StopApp",
		8:  "IsAppConnected",
		9:  "StartRecording",
		10: "StopRecording",
		11: "HasFeature",
		12: "ExecuteFeature",
		13: "GetScreenShot",
	}
	DeviceInteractionType_value = map[string]int32{
		"LockDevice":     0,
		"UnlockDevice":   1,
		"GetDeviceState": 2,
		"IsAppInstalled": 3,
		"InstallApp":     4,
		"UninstallApp":   5,
		"StartApp":       6,
		"StopApp":        7,
		"IsAppConnected": 8,
		"StartRecording": 9,
		"StopRecording":  10,
		"HasFeature":     11,
		"ExecuteFeature": 12,
		"GetScreenShot":  13,
	}
)

func (x DeviceInteractionType) Enum() *DeviceInteractionType {
	p := new(DeviceInteractionType)
	*p = x
	return p
}

func (x DeviceInteractionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceInteractionType) Descriptor() protoreflect.EnumDescriptor {
	return file_action_proto_enumTypes[0].Descriptor()
}

func (DeviceInteractionType) Type() protoreflect.EnumType {
	return &file_action_proto_enumTypes[0]
}

func (x DeviceInteractionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceInteractionType.Descriptor instead.
func (DeviceInteractionType) EnumDescriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{0}
}

type ActionType int32

const (
	ActionType_Custom             ActionType = 0
	ActionType_GetSceneGraph      ActionType = 1
	ActionType_ElementIsDisplayed ActionType = 2
	ActionType_ElementSetValue    ActionType = 3
	ActionType_ElementGetValue    ActionType = 4
	ActionType_Move               ActionType = 5
	ActionType_TouchDown          ActionType = 6
	ActionType_TouchMove          ActionType = 7
	ActionType_TouchUp            ActionType = 8
	ActionType_DragAndDrop        ActionType = 9
	ActionType_LongTouch          ActionType = 10
	ActionType_ElementTouch       ActionType = 11
	ActionType_GetScreenshot      ActionType = 12
	ActionType_GetTests           ActionType = 13
	ActionType_ExecuteTest        ActionType = 14
	ActionType_ExecutionStatus    ActionType = 15
	ActionType_Log                ActionType = 16
	ActionType_UnityReset         ActionType = 17
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "Custom",
		1:  "GetSceneGraph",
		2:  "ElementIsDisplayed",
		3:  "ElementSetValue",
		4:  "ElementGetValue",
		5:  "Move",
		6:  "TouchDown",
		7:  "TouchMove",
		8:  "TouchUp",
		9:  "DragAndDrop",
		10: "LongTouch",
		11: "ElementTouch",
		12: "GetScreenshot",
		13: "GetTests",
		14: "ExecuteTest",
		15: "ExecutionStatus",
		16: "Log",
		17: "UnityReset",
	}
	ActionType_value = map[string]int32{
		"Custom":             0,
		"GetSceneGraph":      1,
		"ElementIsDisplayed": 2,
		"ElementSetValue":    3,
		"ElementGetValue":    4,
		"Move":               5,
		"TouchDown":          6,
		"TouchMove":          7,
		"TouchUp":            8,
		"DragAndDrop":        9,
		"LongTouch":          10,
		"ElementTouch":       11,
		"GetScreenshot":      12,
		"GetTests":           13,
		"ExecuteTest":        14,
		"ExecutionStatus":    15,
		"Log":                16,
		"UnityReset":         17,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_action_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_action_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{1}
}

type LogType int32

const (
	LogType_Info        LogType = 0
	LogType_Warning     LogType = 1
	LogType_Error       LogType = 2
	LogType_Step        LogType = 3
	LogType_Status      LogType = 4
	LogType_Checkpoint  LogType = 5
	LogType_Performance LogType = 6
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "Info",
		1: "Warning",
		2: "Error",
		3: "Step",
		4: "Status",
		5: "Checkpoint",
		6: "Performance",
	}
	LogType_value = map[string]int32{
		"Info":        0,
		"Warning":     1,
		"Error":       2,
		"Step":        3,
		"Status":      4,
		"Checkpoint":  5,
		"Performance": 6,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_action_proto_enumTypes[2].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_action_proto_enumTypes[2]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{2}
}

type ContentType int32

const (
	ContentType_Flatbuffer ContentType = 0
	ContentType_Json       ContentType = 1
	ContentType_Xml        ContentType = 2
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "Flatbuffer",
		1: "Json",
		2: "Xml",
	}
	ContentType_value = map[string]int32{
		"Flatbuffer": 0,
		"Json":       1,
		"Xml":        2,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_action_proto_enumTypes[3].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_action_proto_enumTypes[3]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{3}
}

type AppType int32

const (
	AppType_Cocos AppType = 0
	AppType_Unity AppType = 1
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "Cocos",
		1: "Unity",
	}
	AppType_value = map[string]int32{
		"Cocos": 0,
		"Unity": 1,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_action_proto_enumTypes[4].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_action_proto_enumTypes[4]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{4}
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manager                string `protobuf:"bytes,1,opt,name=manager,proto3" json:"manager,omitempty"`
	DeviceId               string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Name                   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	OperationSystem        string `protobuf:"bytes,4,opt,name=OperationSystem,proto3" json:"OperationSystem,omitempty"`
	SupportedArchitectures string `protobuf:"bytes,5,opt,name=SupportedArchitectures,proto3" json:"SupportedArchitectures,omitempty"`
	Status                 string `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetManager() string {
	if x != nil {
		return x.Manager
	}
	return ""
}

func (x *Device) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetOperationSystem() string {
	if x != nil {
		return x.OperationSystem
	}
	return ""
}

func (x *Device) GetSupportedArchitectures() string {
	if x != nil {
		return x.SupportedArchitectures
	}
	return ""
}

func (x *Device) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeviceRequest) Reset() {
	*x = DeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRequest) ProtoMessage() {}

func (x *DeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRequest.ProtoReflect.Descriptor instead.
func (*DeviceRequest) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{1}
}

type DeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *DeviceResponse) Reset() {
	*x = DeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceResponse) ProtoMessage() {}

func (x *DeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceResponse.ProtoReflect.Descriptor instead.
func (*DeviceResponse) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type InteractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID string                `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Type     DeviceInteractionType `protobuf:"varint,2,opt,name=type,proto3,enum=action.DeviceInteractionType" json:"type,omitempty"`
}

func (x *InteractionRequest) Reset() {
	*x = InteractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionRequest) ProtoMessage() {}

func (x *InteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionRequest.ProtoReflect.Descriptor instead.
func (*InteractionRequest) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{3}
}

func (x *InteractionRequest) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *InteractionRequest) GetType() DeviceInteractionType {
	if x != nil {
		return x.Type
	}
	return DeviceInteractionType_LockDevice
}

type InteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InteractionResponse) Reset() {
	*x = InteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponse) ProtoMessage() {}

func (x *InteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponse.ProtoReflect.Descriptor instead.
func (*InteractionResponse) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{4}
}

type SetAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attr string `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	Val  string `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SetAttr) Reset() {
	*x = SetAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttr) ProtoMessage() {}

func (x *SetAttr) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttr.ProtoReflect.Descriptor instead.
func (*SetAttr) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{5}
}

func (x *SetAttr) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetAttr) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *SetAttr) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type GetAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attr string `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetAttr) Reset() {
	*x = GetAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttr) ProtoMessage() {}

func (x *GetAttr) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttr.ProtoReflect.Descriptor instead.
func (*GetAttr) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{6}
}

func (x *GetAttr) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAttr) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

type MoveOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To   int64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *MoveOffset) Reset() {
	*x = MoveOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveOffset) ProtoMessage() {}

func (x *MoveOffset) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveOffset.ProtoReflect.Descriptor instead.
func (*MoveOffset) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{7}
}

func (x *MoveOffset) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *MoveOffset) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type MoveElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *MoveElement) Reset() {
	*x = MoveElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveElement) ProtoMessage() {}

func (x *MoveElement) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveElement.ProtoReflect.Descriptor instead.
func (*MoveElement) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{8}
}

func (x *MoveElement) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MoveElement) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type Touch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Xoffset int64  `protobuf:"varint,2,opt,name=xoffset,proto3" json:"xoffset,omitempty"`
	Yoffset int64  `protobuf:"varint,3,opt,name=yoffset,proto3" json:"yoffset,omitempty"`
}

func (x *Touch) Reset() {
	*x = Touch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Touch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Touch) ProtoMessage() {}

func (x *Touch) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Touch.ProtoReflect.Descriptor instead.
func (*Touch) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{9}
}

func (x *Touch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Touch) GetXoffset() int64 {
	if x != nil {
		return x.Xoffset
	}
	return 0
}

func (x *Touch) GetYoffset() int64 {
	if x != nil {
		return x.Yoffset
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionID   string     `protobuf:"bytes,1,opt,name=actionID,proto3" json:"actionID,omitempty"`
	ActionType ActionType `protobuf:"varint,2,opt,name=actionType,proto3,enum=action.ActionType" json:"actionType,omitempty"`
	// Types that are assignable to Payload:
	//	*Request_Id
	//	*Request_Data
	//	*Request_SetAttr
	//	*Request_GetAttr
	//	*Request_MoveOffset
	//	*Request_Touch
	//	*Request_MoveElement
	//	*Request_Test
	Payload isRequest_Payload `protobuf_oneof:"payload"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{10}
}

func (x *Request) GetActionID() string {
	if x != nil {
		return x.ActionID
	}
	return ""
}

func (x *Request) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_Custom
}

func (m *Request) GetPayload() isRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Request) GetId() string {
	if x, ok := x.GetPayload().(*Request_Id); ok {
		return x.Id
	}
	return ""
}

func (x *Request) GetData() string {
	if x, ok := x.GetPayload().(*Request_Data); ok {
		return x.Data
	}
	return ""
}

func (x *Request) GetSetAttr() *SetAttr {
	if x, ok := x.GetPayload().(*Request_SetAttr); ok {
		return x.SetAttr
	}
	return nil
}

func (x *Request) GetGetAttr() *GetAttr {
	if x, ok := x.GetPayload().(*Request_GetAttr); ok {
		return x.GetAttr
	}
	return nil
}

func (x *Request) GetMoveOffset() *MoveOffset {
	if x, ok := x.GetPayload().(*Request_MoveOffset); ok {
		return x.MoveOffset
	}
	return nil
}

func (x *Request) GetTouch() *Touch {
	if x, ok := x.GetPayload().(*Request_Touch); ok {
		return x.Touch
	}
	return nil
}

func (x *Request) GetMoveElement() *MoveElement {
	if x, ok := x.GetPayload().(*Request_MoveElement); ok {
		return x.MoveElement
	}
	return nil
}

func (x *Request) GetTest() *Test {
	if x, ok := x.GetPayload().(*Request_Test); ok {
		return x.Test
	}
	return nil
}

type isRequest_Payload interface {
	isRequest_Payload()
}

type Request_Id struct {
	Id string `protobuf:"bytes,3,opt,name=id,proto3,oneof"`
}

type Request_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

type Request_SetAttr struct {
	SetAttr *SetAttr `protobuf:"bytes,5,opt,name=setAttr,proto3,oneof"`
}

type Request_GetAttr struct {
	GetAttr *GetAttr `protobuf:"bytes,6,opt,name=getAttr,proto3,oneof"`
}

type Request_MoveOffset struct {
	MoveOffset *MoveOffset `protobuf:"bytes,7,opt,name=moveOffset,proto3,oneof"`
}

type Request_Touch struct {
	Touch *Touch `protobuf:"bytes,8,opt,name=touch,proto3,oneof"`
}

type Request_MoveElement struct {
	MoveElement *MoveElement `protobuf:"bytes,9,opt,name=moveElement,proto3,oneof"`
}

type Request_Test struct {
	Test *Test `protobuf:"bytes,10,opt,name=test,proto3,oneof"`
}

func (*Request_Id) isRequest_Payload() {}

func (*Request_Data) isRequest_Payload() {}

func (*Request_SetAttr) isRequest_Payload() {}

func (*Request_GetAttr) isRequest_Payload() {}

func (*Request_MoveOffset) isRequest_Payload() {}

func (*Request_Touch) isRequest_Payload() {}

func (*Request_MoveElement) isRequest_Payload() {}

func (*Request_Test) isRequest_Payload() {}

type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string  `protobuf:"bytes,1,opt,name=customerId,proto3" json:"customerId,omitempty"`
	AppID      string  `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	AppType    AppType `protobuf:"varint,3,opt,name=appType,proto3,enum=action.AppType" json:"appType,omitempty"`
	DeviceID   string  `protobuf:"bytes,4,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	SessionID  string  `protobuf:"bytes,5,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Version    string  `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{11}
}

func (x *Connect) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Connect) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Connect) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_Cocos
}

func (x *Connect) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *Connect) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *Connect) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Screenshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sceengraph  []byte      `protobuf:"bytes,1,opt,name=sceengraph,proto3" json:"sceengraph,omitempty"`
	Screenshot  []byte      `protobuf:"bytes,2,opt,name=screenshot,proto3" json:"screenshot,omitempty"`
	ContentType ContentType `protobuf:"varint,3,opt,name=contentType,proto3,enum=action.ContentType" json:"contentType,omitempty"`
}

func (x *Screenshot) Reset() {
	*x = Screenshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screenshot) ProtoMessage() {}

func (x *Screenshot) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screenshot.ProtoReflect.Descriptor instead.
func (*Screenshot) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{12}
}

func (x *Screenshot) GetSceengraph() []byte {
	if x != nil {
		return x.Sceengraph
	}
	return nil
}

func (x *Screenshot) GetScreenshot() []byte {
	if x != nil {
		return x.Screenshot
	}
	return nil
}

func (x *Screenshot) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_Flatbuffer
}

type Test struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assembly string `protobuf:"bytes,1,opt,name=assembly,proto3" json:"assembly,omitempty"`
	Class    string `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	Method   string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *Test) Reset() {
	*x = Test{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{13}
}

func (x *Test) GetAssembly() string {
	if x != nil {
		return x.Assembly
	}
	return ""
}

func (x *Test) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *Test) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type Tests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tests []*Test `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
}

func (x *Tests) Reset() {
	*x = Tests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tests) ProtoMessage() {}

func (x *Tests) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tests.ProtoReflect.Descriptor instead.
func (*Tests) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{14}
}

func (x *Tests) GetTests() []*Test {
	if x != nil {
		return x.Tests
	}
	return nil
}

type LogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    LogType `protobuf:"varint,1,opt,name=type,proto3,enum=action.LogType" json:"type,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogData) Reset() {
	*x = LogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{15}
}

func (x *LogData) GetType() LogType {
	if x != nil {
		return x.Type
	}
	return LogType_Info
}

func (x *LogData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionID   string     `protobuf:"bytes,1,opt,name=actionID,proto3" json:"actionID,omitempty"`
	ActionType ActionType `protobuf:"varint,2,opt,name=actionType,proto3,enum=action.ActionType" json:"actionType,omitempty"`
	Success    bool       `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are assignable to Payload:
	//	*Response_Visible
	//	*Response_Data
	//	*Response_Value
	//	*Response_Screenshot
	//	*Response_Connect
	//	*Response_Tests
	//	*Response_Log
	Payload isResponse_Payload `protobuf_oneof:"payload"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_action_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_action_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_action_proto_rawDescGZIP(), []int{16}
}

func (x *Response) GetActionID() string {
	if x != nil {
		return x.ActionID
	}
	return ""
}

func (x *Response) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_Custom
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (m *Response) GetPayload() isResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Response) GetVisible() bool {
	if x, ok := x.GetPayload().(*Response_Visible); ok {
		return x.Visible
	}
	return false
}

func (x *Response) GetData() []byte {
	if x, ok := x.GetPayload().(*Response_Data); ok {
		return x.Data
	}
	return nil
}

func (x *Response) GetValue() string {
	if x, ok := x.GetPayload().(*Response_Value); ok {
		return x.Value
	}
	return ""
}

func (x *Response) GetScreenshot() *Screenshot {
	if x, ok := x.GetPayload().(*Response_Screenshot); ok {
		return x.Screenshot
	}
	return nil
}

func (x *Response) GetConnect() *Connect {
	if x, ok := x.GetPayload().(*Response_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *Response) GetTests() *Tests {
	if x, ok := x.GetPayload().(*Response_Tests); ok {
		return x.Tests
	}
	return nil
}

func (x *Response) GetLog() *LogData {
	if x, ok := x.GetPayload().(*Response_Log); ok {
		return x.Log
	}
	return nil
}

type isResponse_Payload interface {
	isResponse_Payload()
}

type Response_Visible struct {
	Visible bool `protobuf:"varint,4,opt,name=visible,proto3,oneof"`
}

type Response_Data struct {
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3,oneof"`
}

type Response_Value struct {
	Value string `protobuf:"bytes,6,opt,name=value,proto3,oneof"`
}

type Response_Screenshot struct {
	Screenshot *Screenshot `protobuf:"bytes,7,opt,name=screenshot,proto3,oneof"`
}

type Response_Connect struct {
	Connect *Connect `protobuf:"bytes,8,opt,name=connect,proto3,oneof"`
}

type Response_Tests struct {
	Tests *Tests `protobuf:"bytes,9,opt,name=tests,proto3,oneof"`
}

type Response_Log struct {
	Log *LogData `protobuf:"bytes,10,opt,name=log,proto3,oneof"`
}

func (*Response_Visible) isResponse_Payload() {}

func (*Response_Data) isResponse_Payload() {}

func (*Response_Value) isResponse_Payload() {}

func (*Response_Screenshot) isResponse_Payload() {}

func (*Response_Connect) isResponse_Payload() {}

func (*Response_Tests) isResponse_Payload() {}

func (*Response_Log) isResponse_Payload() {}

var File_action_proto protoreflect.FileDescriptor

var file_action_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x36, 0x0a, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x63, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f,
	0x0a, 0x07, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x2d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x30,
	0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f,
	0x22, 0x31, 0x0a, 0x0b, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x05, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x78, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x78,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x79, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x79, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0xa0, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x2b, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x34,
	0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x75,
	0x63, 0x68, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x12, 0x37, 0x0a, 0x0b, 0x6d,
	0x6f, 0x76, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x65, 0x65, 0x6e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x63, 0x65, 0x65, 0x6e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x2b, 0x0a, 0x05,
	0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x22, 0x48, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x90,
	0x02, 0x0a, 0x15, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x6b,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x73, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41,
	0x70, 0x70, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70,
	0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x10, 0x07, 0x12,
	0x12, 0x0a, 0x0e, 0x49, 0x73, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x61,
	0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0x0c, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x6f, 0x74, 0x10,
	0x0d, 0x2a, 0xb4, 0x02, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10,
	0x04, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x6f, 0x75, 0x63, 0x68, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x6f,
	0x75, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x75,
	0x63, 0x68, 0x55, 0x70, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x67, 0x41, 0x6e,
	0x64, 0x44, 0x72, 0x6f, 0x70, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x54,
	0x6f, 0x75, 0x63, 0x68, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x0f, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x11, 0x2a, 0x62, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x06, 0x2a, 0x30, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x46,
	0x6c, 0x61, 0x74, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a,
	0x73, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x6d, 0x6c, 0x10, 0x02, 0x2a, 0x1f,
	0x0a, 0x07, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6f, 0x63,
	0x6f, 0x73, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x10, 0x01, 0x32,
	0xdf, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x20, 0x5a, 0x0a, 0x68, 0x75, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xaa,
	0x02, 0x11, 0x43, 0x6f, 0x6d, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x75, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_action_proto_rawDescOnce sync.Once
	file_action_proto_rawDescData = file_action_proto_rawDesc
)

func file_action_proto_rawDescGZIP() []byte {
	file_action_proto_rawDescOnce.Do(func() {
		file_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_action_proto_rawDescData)
	})
	return file_action_proto_rawDescData
}

var file_action_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_action_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_action_proto_goTypes = []interface{}{
	(DeviceInteractionType)(0),  // 0: action.DeviceInteractionType
	(ActionType)(0),             // 1: action.ActionType
	(LogType)(0),                // 2: action.LogType
	(ContentType)(0),            // 3: action.ContentType
	(AppType)(0),                // 4: action.AppType
	(*Device)(nil),              // 5: action.Device
	(*DeviceRequest)(nil),       // 6: action.DeviceRequest
	(*DeviceResponse)(nil),      // 7: action.DeviceResponse
	(*InteractionRequest)(nil),  // 8: action.InteractionRequest
	(*InteractionResponse)(nil), // 9: action.InteractionResponse
	(*SetAttr)(nil),             // 10: action.SetAttr
	(*GetAttr)(nil),             // 11: action.GetAttr
	(*MoveOffset)(nil),          // 12: action.MoveOffset
	(*MoveElement)(nil),         // 13: action.MoveElement
	(*Touch)(nil),               // 14: action.Touch
	(*Request)(nil),             // 15: action.Request
	(*Connect)(nil),             // 16: action.Connect
	(*Screenshot)(nil),          // 17: action.Screenshot
	(*Test)(nil),                // 18: action.Test
	(*Tests)(nil),               // 19: action.Tests
	(*LogData)(nil),             // 20: action.LogData
	(*Response)(nil),            // 21: action.Response
}
var file_action_proto_depIdxs = []int32{
	5,  // 0: action.DeviceResponse.devices:type_name -> action.Device
	0,  // 1: action.InteractionRequest.type:type_name -> action.DeviceInteractionType
	1,  // 2: action.Request.actionType:type_name -> action.ActionType
	10, // 3: action.Request.setAttr:type_name -> action.SetAttr
	11, // 4: action.Request.getAttr:type_name -> action.GetAttr
	12, // 5: action.Request.moveOffset:type_name -> action.MoveOffset
	14, // 6: action.Request.touch:type_name -> action.Touch
	13, // 7: action.Request.moveElement:type_name -> action.MoveElement
	18, // 8: action.Request.test:type_name -> action.Test
	4,  // 9: action.Connect.appType:type_name -> action.AppType
	3,  // 10: action.Screenshot.contentType:type_name -> action.ContentType
	18, // 11: action.Tests.tests:type_name -> action.Test
	2,  // 12: action.LogData.type:type_name -> action.LogType
	1,  // 13: action.Response.actionType:type_name -> action.ActionType
	17, // 14: action.Response.screenshot:type_name -> action.Screenshot
	16, // 15: action.Response.connect:type_name -> action.Connect
	19, // 16: action.Response.tests:type_name -> action.Tests
	20, // 17: action.Response.log:type_name -> action.LogData
	6,  // 18: action.RemoteDevice.DeviceList:input_type -> action.DeviceRequest
	8,  // 19: action.RemoteDevice.DeviceInteraction:input_type -> action.InteractionRequest
	15, // 20: action.RemoteDevice.ActionExecute:input_type -> action.Request
	7,  // 21: action.RemoteDevice.DeviceList:output_type -> action.DeviceResponse
	9,  // 22: action.RemoteDevice.DeviceInteraction:output_type -> action.InteractionResponse
	21, // 23: action.RemoteDevice.ActionExecute:output_type -> action.Response
	21, // [21:24] is the sub-list for method output_type
	18, // [18:21] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_action_proto_init() }
func file_action_proto_init() {
	if File_action_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Touch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Screenshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_action_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_action_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Request_Id)(nil),
		(*Request_Data)(nil),
		(*Request_SetAttr)(nil),
		(*Request_GetAttr)(nil),
		(*Request_MoveOffset)(nil),
		(*Request_Touch)(nil),
		(*Request_MoveElement)(nil),
		(*Request_Test)(nil),
	}
	file_action_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Response_Visible)(nil),
		(*Response_Data)(nil),
		(*Response_Value)(nil),
		(*Response_Screenshot)(nil),
		(*Response_Connect)(nil),
		(*Response_Tests)(nil),
		(*Response_Log)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_action_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_action_proto_goTypes,
		DependencyIndexes: file_action_proto_depIdxs,
		EnumInfos:         file_action_proto_enumTypes,
		MessageInfos:      file_action_proto_msgTypes,
	}.Build()
	File_action_proto = out.File
	file_action_proto_rawDesc = nil
	file_action_proto_goTypes = nil
	file_action_proto_depIdxs = nil
}
